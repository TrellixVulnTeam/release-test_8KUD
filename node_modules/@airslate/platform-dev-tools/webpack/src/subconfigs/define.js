/* eslint-disable @typescript-eslint/no-var-requires */
/* eslint-disable no-underscore-dangle */
const webpack = require('webpack');
const env = require('../envs');

const createGlobalsDictionary = ({ appName, autoAuth = false }) => ({
  NODE_ENV: JSON.stringify(env.NODE_ENV),
  'process.env.NODE_ENV': JSON.stringify(env.NODE_ENV),
  DEV_ENV: JSON.stringify(env.DEV),
  'process.env.MOUNT_PATH': JSON.stringify(env.MOUNT_PATH),
  'process.env.TARGET': JSON.stringify(env.TARGET),
  __LOCAL__: JSON.stringify(env.__LOCAL__),
  __DEV__: JSON.stringify(env.__DEV__),
  __PROD__: JSON.stringify(env.__PROD__),
  __APP_NAME__: JSON.stringify(appName),
  __BRANCH__: JSON.stringify(env.BRANCH),
  __BUILD_NUMBER__: JSON.stringify(env.BUILD_NUMBER),
  __RELEASE__: JSON.stringify(env.RELEASE),
  __TARGET__: JSON.stringify(env.TARGET),
  __AUTO_AUTH__: JSON.stringify(env.__LOCAL__ ? autoAuth : false),
  __SENTRY_KEY__: JSON.stringify(''), // Should be removed, when all entries will be removed.
});

const define = ({ appName, autoAuth = false }) => ({
  plugins: [
    new webpack.DefinePlugin(createGlobalsDictionary({ appName, autoAuth })),
    new webpack.ProvidePlugin({
      process: 'process/browser',
      Buffer: ['buffer', 'Buffer'], // IE
    }),
  ],
});

// Так-себе решение, но ничего лучше не придумал.
define.createGlobalsDictionary = createGlobalsDictionary;

module.exports = define;
