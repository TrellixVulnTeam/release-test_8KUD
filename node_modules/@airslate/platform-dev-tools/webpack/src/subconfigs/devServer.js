/* eslint @typescript-eslint/no-var-requires: "off" */
const fs = require('fs');
const path = require('path');
const env = require('../envs');

module.exports = ({
  host = 'airslate.localhost',
  port = 1900,
  options = {
    allowedHosts: ['.airslate.localhost'],
    historyApiFallback: true,
  },
} = {}) => {
  const cwd = process.cwd();
  const configPatch = path.join(cwd, '../config.json');
  const sslLeyPatch = path.join(cwd, '../ssl/private.key');
  const sslCertPatch = path.join(cwd, '../ssl/private.pem');

  if (!fs.existsSync(configPatch)) {
    throw new Error('config.json file does not exist in the root directory, ');
  }

  if (!fs.existsSync(sslLeyPatch)) {
    throw new Error('ssl/private.key file does not exist in the root directory, ');
  }

  if (!fs.existsSync(sslCertPatch)) {
    throw new Error('ssl/private.pem file does not exist in the root directory, ');
  }

  const sslLey = fs.readFileSync(sslLeyPatch);
  const sslCert = fs.readFileSync(sslCertPatch);

  const config = require(configPatch);
  const { AIRSLATE_ENV_CONFIGURATION } = config;

  const before = (app) => {
    app.use((req, res, next) => {
      res.header('Access-Control-Allow-Origin', '*');
      res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Organization-Domain, Authorization');
      next();
    });

    app.get('/assets/airslateEnvConf.js', (req, res) => {
      res.header('Content-Type', 'text/javascript');
      res.send(`Object.assign(window, JSON.parse('${JSON.stringify(config)}'));`);
    });

    app.get('/', (req, res, next) => {
      if (/^\w+\.\w+:+\w+$/.test(req.headers.host)) {
        res.redirect(`//my.${req.get('host')}`);
      } else {
        next();
      }
    });
  };

  const proxy = {
    '/v1': {
      target: AIRSLATE_ENV_CONFIGURATION.API_HOST,
      changeOrigin: true,
      logLevel: 'debug',
    },
    '/editor': {
      target: AIRSLATE_ENV_CONFIGURATION.API_HOST,
      changeOrigin: true,
      logLevel: 'debug',
      router: req => (`https://${AIRSLATE_ENV_CONFIGURATION.API_HOST.replace('api', req.headers.host.split('.')[0])}`),
    },
    '/html-form-builder': {
      target: AIRSLATE_ENV_CONFIGURATION.API_HOST,
      changeOrigin: true,
      logLevel: 'debug',
      router: req => (`https://${AIRSLATE_ENV_CONFIGURATION.API_HOST.replace('api', req.headers.host.split('.')[0])}`),
    },
  };

  return ({
    devServer: {
      host,
      port,
      hot: env.__LOCAL__,
      https: {
        key: sslLey,
        cert: sslCert,
        ca: sslCert,
      },
      before,
      proxy,
      ...options,
    },
  });
};
