/* eslint @typescript-eslint/no-var-requires: "off" */
const fs = require('fs');
const path = require('path');

let sdkPath;
let sdkRouter;
let sdkLocales;
let alias;

const exists = fs.existsSync(path.resolve((__dirname), '../../../../platform-sdk/src/index.js'));

if (exists) {
  sdkPath = path.resolve((__dirname), '../../../../platform-sdk/src/index.js');
  sdkRouter = path.resolve((__dirname), '../../../../platform-sdk/src/router/index.js');
  sdkLocales = path.resolve((__dirname), '../../../../platform-sdk/src/locales/index.js');
  alias = {
    '@airslate/platform-sdk/router': sdkRouter,
    '@airslate/platform-sdk/locales': sdkLocales,
    '@airslate/platform-sdk': sdkPath,
  };
} else {
  sdkPath = path.resolve((__dirname), '../../../../platform-sdk/dist/esm/index.js');
  sdkRouter = path.resolve((__dirname), '../../../../platform-sdk/dist/esm/router/index.js');
  sdkLocales = path.resolve((__dirname), '../../../../platform-sdk/dist/esm/locales/index.js');
  alias = {
    '@airslate/platform-sdk/router': sdkRouter,
    '@airslate/platform-sdk/locales': sdkLocales,
    '@airslate/platform-sdk': sdkPath,
  };
}

module.exports = () => ({
  resolve: {
    alias,
    mainFields: ['srcModule', 'browser', 'module', 'main'],
  },
});
