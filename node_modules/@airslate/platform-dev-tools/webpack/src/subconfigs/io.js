/* eslint @typescript-eslint/no-var-requires: "off" */
const path = require('path');
const env = require('../envs');

const toCamelCase = (str) => str
  .replace(/[\s_-](.)/g, (s) => s.toUpperCase())
  .replace(/[\s_-]/g, '')
  .replace(/^(.)/, (s) => s.toLowerCase());

const smartCamelCase = (str) => (
  /[_-]/.test(str) ? toCamelCase(str) : str
);

const commonOutput = {
  path: env.DIST_FOLDER,
  filename: '[name].[contenthash].js',
};

module.exports = (bundles, appName) => ({
  output: !env.__LOCAL__ ? {
    ...commonOutput,
    publicPath: `${env.CDN}/${appName}/${env.BUILD_NUMBER}/`,
  } : {
    ...commonOutput,
    publicPath: `${env.CDN}/`,
  },
  entry: bundles.reduce(
    // eslint-disable-next-line max-len
    (entries, e) => ({ ...entries, [smartCamelCase(e)]: path.join(env.APP_FOLDER, env.BUILD_FOLDER, e) }),
    {},
  ),
  externals: {},
  module: {},
  target: ['web', 'es5'],
});
