"use strict";

exports.__esModule = true;
exports.default = void 0;

var appveyor = _interopRequireWildcard(require("./appveyor"));

var azurePipelines = _interopRequireWildcard(require("./azurePipelines"));

var buildkite = _interopRequireWildcard(require("./buildkite"));

var circle = _interopRequireWildcard(require("./circle"));

var cirrus = _interopRequireWildcard(require("./cirrus"));

var codeship = _interopRequireWildcard(require("./codeship"));

var drone = _interopRequireWildcard(require("./drone"));

var gitlab = _interopRequireWildcard(require("./gitlab"));

var heroku = _interopRequireWildcard(require("./heroku"));

var jenkins = _interopRequireWildcard(require("./jenkins"));

var now = _interopRequireWildcard(require("./now"));

var netlify = _interopRequireWildcard(require("./netlify"));

var semaphore = _interopRequireWildcard(require("./semaphore"));

var shippable = _interopRequireWildcard(require("./shippable"));

var snap = _interopRequireWildcard(require("./snap"));

var teamcity = _interopRequireWildcard(require("./teamcity"));

var travis = _interopRequireWildcard(require("./travis"));

var wercker = _interopRequireWildcard(require("./wercker"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var _default = [netlify, now, circle, heroku, appveyor, azurePipelines, buildkite, cirrus, codeship, drone, gitlab, jenkins, semaphore, shippable, snap, teamcity, travis, wercker];
exports.default = _default;